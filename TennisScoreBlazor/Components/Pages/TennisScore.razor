@page "/TennisScoreMaster"
@rendermode InteractiveServer

<PageTitle>TennisScore Calculator!</PageTitle>
@* NOTES:  *@
@* I am well aware of using <br> is non-semantic and should be done in css, but in this app i mainly focused on code, and not styling. Same goes for <strong> and <hr>  *@
@* I simply chose to build the html fairly quickly and kept it simple, not to spend too much time on this part. *@
@* If you want me to do redo this part correctly, just give me a heads up and i will fix it!*@
@* Hope this meets your requirements! :)
Mvh Johannes
*@
<div class="text-center">
    <h1 class="display-6">
        TennisScore Calculator
        <small class="text-muted">By Johannes Sirugo</small>
    </h1>

    <button hidden="@(gameStarted)" class="btn btn-success" @onclick="StartGame">Start Match</button>
    <button hidden="@(!gameStarted)" class="btn btn-danger" @onclick="RestartGame">Restart Match</button>

    <br /><br />
    <button class="btn btn-secondary" @onclick="PlayerAScores" disabled="@(!gameStarted || isGameOver)">Player A scores!</button>
    <button class="btn btn-secondary" @onclick="PlayerBScores" disabled="@(!gameStarted || isGameOver)">Player B scores!</button>
    <br />
    <hr>
    <h2>
        First to score 3!
      
        <br />
        Match Score: @currentMatchScore <br />
        <strong hidden="@string.IsNullOrEmpty(setWinner)">@setWinner took the last set!</strong>
    </h2>
    
    @if (playerASets == 2 && playerBSets == 2)
    {
        <h2><strong>Nailbiter!!</strong></h2>
    }
    <hr>
    <h3 hidden="@(!gameStarted )">
        <strong>
            Game: @roundCount <br />
            Current Set Score:  @CalculateScore() <br />
            (@currentSetScore)
        </strong>
        <hr>
    </h3>

    @if (isGameOver)
    {
        <div class="alert alert-success">
            <button class="btn btn-outline-success" @onclick="RestartGame">Restart Game</button>
        </div>
    }
</div>
@code {
    /*needed variables*/
    private int playerAScore = 0;
    private int playerBScore = 0;
    private int playerASets = 0;
    private int playerBSets = 0;
    private bool isGameOver = false;
    private bool gameStarted = false;
    private string setWinner = "";
    /*various counter variables*/
    private int roundCount => (playerASets + playerBSets) + 1;
    private string currentSetScore => $"{playerAScore}-{playerBScore}";
    private string currentMatchScore => $"{playerASets}-{playerBSets}";

    private void StartGame()
    {
        gameStarted = true;
        if (isGameOver)
        {
            setWinner = "";
            RestartGame();
            StartGame();
        }

    }
    private void RestartSet() //forces user to press "start" button again in order to not missinput a score-press
    {
        playerAScore = 0;
        playerBScore = 0;
        gameStarted = false; 
      
    }

    private void RestartGame()
    {
        playerAScore = 0;
        playerBScore = 0;
        playerASets = 0;
        playerBSets = 0;
        isGameOver = false;
        gameStarted = false;
        setWinner = "";
    }

    private void PlayerAScores()
    {
        if (!isGameOver)
        {
            playerAScore++;
            CheckGameStatus();
        }
    }

    private void PlayerBScores()
    {
        if (!isGameOver)
        {
            playerBScore++;
            CheckGameStatus();
        }
    }


    private void CheckGameStatus()
    {
        if (playerAScore >= 4 && playerAScore >= playerBScore + 2)
        {
            playerASets++;
            if (playerASets == 3) // first to 3 rule since i didnt quite get the tie-breaker part.
            {

                isGameOver = true;
            }
            else
            {
                setWinner = "Player A";
                RestartSet();
            }
        }
        else if (playerBScore >= 4 && playerBScore >= playerAScore + 2)
        {
            playerBSets++;
            if (playerBSets == 3)
            {
                isGameOver = true;
            }
            else
            {
                setWinner = "Player B";
                RestartSet();
            }
        }
    }


    private string CalculateScore()
    {    @*
        //Notes here: I was not sure if i wanted to keep this part about tie-breaks, since im not certain if i undertand them completely
        // It feels pointless if there still is a 2 point difference needed. would be a different story if the tie-breaks are decided with a 1 score diffrence
        // if (playerAScore >= 7 && playerAScore >= playerBScore + 2) // for example here, if the "(playerAScore >= playerBScore + 2) would be "(playerAScore >= playerBScore + 1)" it would make sense,
        // but apparently, thats not the case. Might have missunderstood aswell. never played tennis.
        //EDIT: kept it for fun, not too proud of it though.
         *@
        string matchState = "";
        string[] scores = { "Love", "Fifteen", "Thirty", "Forty" };
        int difference = Math.Abs(playerAScore - playerBScore);
        
        if (playerAScore >= 7 && playerAScore >= playerBScore + 2)
        {
           
            matchState = "Player A wins (Tie-Break)!";
        }
        else if (playerBScore >= 7 && playerBScore >= playerAScore + 2)
        {
           
            matchState = "Player B wins (Tie-Break)!";
        }
        else if (playerAScore >= 6 && playerBScore >= 6)
        {
            if (difference == 0)
            {
                matchState = "Tie-Break: " + playerAScore + " - " + playerBScore;
            }
            else if (difference == 1)
            {
                if (playerAScore > playerBScore)
                {
                    matchState = "Advantage Player A! (Tie-Break)";
                }
                else
                {
                    matchState = "Advantage Player B! (Tie-Break)";
                }
            }
        }
        else if (isGameOver)
        {
            if (playerAScore >= 4 && playerAScore >= playerBScore + 2)
            {
                
                matchState = "Player A wins!";
            }
            else if (playerBScore >= 4 && playerBScore >= playerAScore + 2)
            {
                
                matchState = "Player B wins!";
            }
        }
        else if (playerAScore < 3 && playerBScore < 3 && playerAScore >= 1 && playerBScore >= 1)
        {
            if (playerAScore == playerBScore)
            {
                matchState = $"{scores[playerAScore]} - ALL";
            }
            else
            {
                matchState = $"{scores[playerAScore]} - {scores[playerBScore]}";
            }
        }
        else if (playerAScore >= 3 && playerBScore >= 3)
        {
            if (difference == 0)
            {
                matchState = "Deuce";
            }
            else if (difference == 1)
            {
                if (playerAScore > playerBScore)
                {
                    matchState = "Advantage Player A!";
                }
                else
                {
                    matchState = "Advantage Player B!";
                }
            }
        }
        else
        {
            matchState = $"{scores[playerAScore]} - {scores[playerBScore]}";
        }

        return matchState;
    }
}
